# Generated by Django 2.1.1 on 2018-11-07 08:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='asset_application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appdate', models.DateTimeField(auto_created=True, verbose_name='申请时间')),
                ('Explain', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('type', models.IntegerField(blank=True, null=True, verbose_name='借用/领用')),
            ],
            options={
                'db_table': 'asset_application',
            },
        ),
        migrations.CreateModel(
            name='asset_attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='名称')),
                ('filepath', models.CharField(blank=True, max_length=256, null=True, verbose_name='文件路径')),
                ('oldname', models.CharField(blank=True, max_length=128, null=True, verbose_name='原文件名')),
                ('version', models.IntegerField(default=0, verbose_name='版本号')),
                ('final', models.BooleanField(default=False, verbose_name='终稿标记')),
                ('category', models.CharField(blank=True, max_length=64, null=True, verbose_name='分类')),
                ('nots', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
                ('md5', models.CharField(blank=True, max_length=32, null=True, verbose_name='MD5校验')),
                ('file', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'asset_attachment',
            },
        ),
        migrations.CreateModel(
            name='asset_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='名称')),
                ('bom', models.BooleanField(default=False, verbose_name='组件')),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('autosid', models.CharField(blank=True, max_length=8, null=True, verbose_name='自动编号方案')),
                ('parentid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.asset_category')),
            ],
            options={
                'db_table': 'asset_category',
            },
        ),
        migrations.CreateModel(
            name='asset_conf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
            ],
            options={
                'db_table': 'asset_conf',
            },
        ),
        migrations.CreateModel(
            name='asset_parts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('sn', models.CharField(max_length=32, null=True, verbose_name='出厂编号')),
                ('type', models.CharField(max_length=32, null=True)),
                ('specifications', models.CharField(max_length=64, null=True, verbose_name='规格')),
                ('bom', models.BooleanField(default=True, verbose_name='组件')),
                ('price', models.FloatField(default=0, verbose_name='价格')),
                ('purchase', models.DateField(null=True, verbose_name='购买日期')),
                ('wrranty', models.DateField(null=True, verbose_name='维保到期')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('status', models.IntegerField(default=1, verbose_name='状态')),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
                ('categoryid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.asset_category', verbose_name='类型')),
            ],
            options={
                'db_table': 'asset_parts',
            },
        ),
        migrations.CreateModel(
            name='asset_property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sid', models.CharField(max_length=16, unique=True, verbose_name='编号')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('specifications', models.CharField(blank=True, max_length=64, null=True, verbose_name='规格')),
                ('model', models.CharField(blank=True, max_length=64, null=True, verbose_name='型号')),
                ('bom', models.BooleanField(default=False, verbose_name='组件')),
                ('purchase', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('price', models.FloatField(default=0, verbose_name='价格')),
                ('manufacture', models.DateField(blank=True, null=True, verbose_name='出厂日期')),
                ('warranty', models.DateField(blank=True, null=True, verbose_name='维保到期')),
                ('sn', models.CharField(max_length=32, null=True, verbose_name='出厂编号')),
                ('position', models.CharField(blank=True, max_length=24, null=True, verbose_name='所在位置')),
                ('status', models.IntegerField(default=1, verbose_name='设备状态')),
                ('nots', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
                ('categoryid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.asset_category', verbose_name='类型')),
                ('parentid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.asset_property', verbose_name='隶属主机')),
            ],
            options={
                'db_table': 'asset_property',
            },
        ),
        migrations.CreateModel(
            name='base_conf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corpid', models.CharField(max_length=128, null=True)),
                ('corpsecret', models.CharField(max_length=64, null=True)),
                ('agentid', models.IntegerField(default=0)),
                ('token', models.CharField(max_length=256, null=True)),
                ('expirestime', models.DateTimeField()),
            ],
            options={
                'db_table': 'base_conf',
            },
        ),
        migrations.CreateModel(
            name='base_menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mnid', models.CharField(max_length=8, unique=True, verbose_name='菜单编号')),
                ('name', models.CharField(max_length=16, verbose_name='菜单')),
                ('sequence', models.IntegerField(default=0, verbose_name='顺序')),
                ('linkto', models.CharField(blank=True, max_length=256, null=True, verbose_name='跳转到...')),
                ('active', models.FloatField(default=True, verbose_name='有效的')),
                ('parentid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.base_menu', to_field='mnid', verbose_name='上级菜单')),
            ],
            options={
                'db_table': 'base_menu',
            },
        ),
        migrations.CreateModel(
            name='base_user_sign_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signtime', models.DateTimeField(verbose_name='登录时间')),
                ('fromip', models.CharField(max_length=16, verbose_name='来源IP')),
                ('contl', models.CharField(max_length=32, verbose_name='描述或登录方式')),
            ],
            options={
                'db_table': 'base_user_log',
            },
        ),
        migrations.CreateModel(
            name='employee_department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='hr_conf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, null=True, verbose_name='配置名称')),
                ('agentid', models.IntegerField(null=True, verbose_name='企业微信ID')),
                ('corpsecret', models.CharField(max_length=64, null=True, verbose_name='企业微信密钥')),
            ],
        ),
        migrations.CreateModel(
            name='hr_department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
                ('parentid', models.IntegerField(default=0, verbose_name='上级部门')),
                ('order', models.IntegerField(null=True, verbose_name='次序')),
                ('type', models.IntegerField(default=0, verbose_name='组织类型:0行政/1项目/2团队')),
            ],
            options={
                'db_table': 'hr_department',
            },
        ),
        migrations.CreateModel(
            name='hr_hr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.CharField(max_length=32, unique=True, verbose_name='用户ID')),
                ('name', models.CharField(max_length=64, verbose_name='姓名')),
                ('alias', models.CharField(blank=True, max_length=32, null=True, verbose_name='别名')),
                ('department', models.CharField(max_length=256, null=True, verbose_name='部门')),
                ('position', models.CharField(max_length=32, null=True, verbose_name='职务信息')),
                ('mobile', models.CharField(max_length=16, null=True, verbose_name='手机')),
                ('gender', models.CharField(max_length=16, null=True, verbose_name='姓别')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='邮箱')),
                ('avatar', models.CharField(max_length=256, null=True, verbose_name='头像')),
                ('status', models.IntegerField(default=1, verbose_name='激活状态:1已激活2已禁用4未激活')),
                ('enable', models.IntegerField(default=1, verbose_name='有效')),
                ('isleader', models.IntegerField(default=0, verbose_name='主管')),
                ('extattr', models.CharField(max_length=256, null=True, verbose_name='扩展属性')),
                ('hide_mobile', models.BooleanField(default=0, verbose_name='隐蔽手机')),
                ('english_name', models.CharField(max_length=64, null=True, verbose_name='英文名')),
                ('telephone', models.CharField(max_length=16, null=True, verbose_name='座机')),
                ('order', models.CharField(max_length=256, null=True, verbose_name='部门内的排序值')),
                ('external_profile', models.CharField(max_length=256, null=True, verbose_name='成员对外属性')),
                ('qr_code', models.CharField(max_length=256, null=True, verbose_name='个人二维码')),
                ('passwd', models.CharField(max_length=256, null=True, verbose_name='密码')),
                ('session', models.CharField(max_length=32, null=True, verbose_name='Cookice_session')),
                ('expsession', models.TimeField(null=True)),
                ('wxsync', models.BooleanField(default=0, verbose_name='同步企业微信')),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
            ],
        ),
        migrations.CreateModel(
            name='position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='地址名')),
                ('nots', models.TextField(null=True, verbose_name='备注')),
            ],
            options={
                'db_table': 'base_position',
            },
        ),
        migrations.CreateModel(
            name='pureftp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=1, verbose_name='状态')),
                ('user', models.CharField(max_length=32, verbose_name='账号')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
                ('uid', models.CharField(max_length=11, verbose_name='用户ID')),
                ('gid', models.CharField(max_length=11, verbose_name='组ID')),
                ('dir', models.CharField(max_length=128, verbose_name='目录')),
                ('ulbandwidth', models.IntegerField(default=0, verbose_name='上传带宽')),
                ('dlbandwidth', models.IntegerField(default=0)),
                ('comment', models.TextField(null=True)),
                ('ipaccess', models.CharField(default='0.0.0.0', max_length=15)),
                ('quotasize', models.IntegerField(default=0)),
                ('quotafiles', models.IntegerField(default=0)),
                ('createdate', models.DateField()),
                ('lastedate', models.DateField()),
                ('active', models.BooleanField(default=True, verbose_name='有效的')),
            ],
        ),
        migrations.AddField(
            model_name='employee_department',
            name='departmentid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.hr_department', to_field='pid', verbose_name='部门ID'),
        ),
        migrations.AddField(
            model_name='employee_department',
            name='employeeid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.hr_hr', to_field='userid', verbose_name='员工ID'),
        ),
        migrations.AddField(
            model_name='base_user_sign_log',
            name='employeeid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.hr_hr', verbose_name='员工ID'),
        ),
        migrations.AddField(
            model_name='asset_property',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.hr_hr', verbose_name='用户'),
        ),
        migrations.AddField(
            model_name='asset_parts',
            name='parentid',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.asset_property', verbose_name='归属资产'),
        ),
        migrations.AddField(
            model_name='asset_attachment',
            name='property',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.asset_property', verbose_name='设备号'),
        ),
        migrations.AddField(
            model_name='asset_application',
            name='applicant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.hr_hr', verbose_name='申请人'),
        ),
    ]
